#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

void insertNode(struct Node** head, int value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = value;
    newNode->next = *head;
    *head = newNode;
}

void printList(struct Node* head) {
    struct Node* temp = head;
    while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->next;
    }
    printf("\n");
}

struct Node* getTail(struct Node* head) {
    while (head != NULL && head->next != NULL) {
        head = head->next;
    }
    return head;
}

struct Node* partition(struct Node* head, struct Node* end, struct Node** newHead, struct Node** newEnd) {
    struct Node* pivot = end;
    struct Node* prev = NULL, *curr = head, *tail = pivot;

    while (curr != pivot) {
        if (curr->data < pivot->data) {
            if (*newHead == NULL) {
                *newHead = curr;
            }
            prev = curr;
            curr = curr->next;
        } else {
            if (prev) {
                prev->next = curr->next;
            }
            struct Node* temp = curr->next;
            curr->next = NULL;
            tail->next = curr;
            tail = curr;
            curr = temp;
        }
    }
    if (*newHead == NULL) {
        *newHead = pivot;
    }
    *newEnd = tail;
    return pivot;
}

struct Node* quickSortRecur(struct Node* head, struct Node* end) {
    if (!head || head == end) {
        return head;
    }

    struct Node *newHead = NULL, *newEnd = NULL;
    struct Node* pivot = partition(head, end, &newHead, &newEnd);

    if (newHead != pivot) {
        struct Node* temp = newHead;
        while (temp->next != pivot) {
            temp = temp->next;
        }
        temp->next = NULL;

        newHead = quickSortRecur(newHead, temp);

        temp = getTail(newHead);
        temp->next = pivot;
    }
    pivot->next = quickSortRecur(pivot->next, newEnd);
    return newHead;
}

void quickSort(struct Node** headRef) {
    *headRef = quickSortRecur(*headRef, getTail(*headRef));
}

int main() {
    struct Node* head = NULL;
    int n, value;

    printf("Digite o número de elementos na lista: ");
    scanf("%d", &n);

    printf("Digite os %d elementos da lista:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &value);
        insertNode(&head, value);
    }

    quickSort(&head);
    printf("Lista após a ordenação:\n");
    printList(head);

    return 0;
}
