MERGE SORT

#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

void insertNode(struct Node** head, int value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = value;
    newNode->next = *head;
    *head = newNode;
}

void printList(struct Node* head) {
    struct Node* temp = head;
    while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->next;
    }
    printf("\n");
}

struct Node* getMiddle(struct Node* head) {
    if (head == NULL) return head;

    struct Node* slow = head;
    struct Node* fast = head->next;

    while (fast != NULL && fast->next != NULL) {
        slow = slow->next;
        fast = fast->next->next;
    }

    return slow;
}

struct Node* merge(struct Node* left, struct Node* right) {
    if (left == NULL) return right;
    if (right == NULL) return left;

    struct Node* result = NULL;

    if (left->data <= right->data) {
        result = left;
        result->next = merge(left->next, right);
    } else {
        result = right;
        result->next = merge(left, right->next);
    }

    return result;
}

void mergeSort(struct Node** headRef) {
    struct Node* head = *headRef;
    if (head == NULL || head->next == NULL) {
        return; 
    }

    struct Node* middle = getMiddle(head);
    struct Node* nextOfMiddle = middle->next;

    middle->next = NULL;

    mergeSort(&head);
    mergeSort(&nextOfMiddle);

    *headRef = merge(head, nextOfMiddle);
}

int main() {
    struct Node* head = NULL;
    int n, value;

    printf("Digite o número de elementos na lista: ");
    scanf("%d", &n);
    printf("Digite os %d elementos da lista:\n", n);
    
    for (int i = 0; i < n; i++) {
        scanf("%d", &value);
        insertNode(&head, value);
    }

    mergeSort(&head);
    printf("Lista após a ordenação:\n");
    printList(head);

    return 0;
}
